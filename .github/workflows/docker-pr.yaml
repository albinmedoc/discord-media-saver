name: Build Docker Image for PR

on:
  pull_request:
    branches: [master, development]

jobs:
  build_pr_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Tags for PR
        id: tags
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr,prefix=PR-
          labels: |
            org.opencontainers.image.title=Discord Media Saver (PR-${{ github.event.number }})
            org.opencontainers.image.description=Discord Media Saver - Pull Request #${{ github.event.number }}

      - name: Build and Push PR Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.tags.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const tags = `${{ steps.tags.outputs.tags }}`.split('\n').filter(tag => tag.trim());
            
            const comment = `🐳 **Docker Image Built for PR #${prNumber}**
            
            **Available Tag:**
            ${tags.map(tag => `- \`${tag.trim()}\``).join('\n')}
            
            **Usage:**
            \`\`\`bash
            docker pull ghcr.io/${{ github.repository }}:PR-${prNumber}
            \`\`\`
            
            **Test this PR:**
            \`\`\`bash
            docker run -d \\
              --name discord-media-saver-pr-${prNumber} \\
              -e DISCORD_TOKEN="your_token" \\
              -e CHANNEL_ID="your_channel_id" \\
              -v ./media:/media \\
              ghcr.io/${{ github.repository }}:PR-${prNumber}
            \`\`\``;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
